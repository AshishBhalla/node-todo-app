// const MongoClient = require('mongodb').MongoClient;

// destructuring above call and adding others
const {MongoClient, ObjectID} = require('mongodb');

//to see the id generated by mongoDB
// var obj = new ObjectID();
// console.log(obj);

//below is called as object destructuring, means we can extract the proprty from n object and createa varibale
//e.g.

// var user = {name:' Ashish', age: 29};
// //this will extract the value of name property and set it equal to the name variable
// var {name} = user;




//In MongoDB-
//Table is called as collection
//Row is called as document
//column is called as field

//MongoClient takes 2 args 1. URL to database(it can be local/aws/heroku/any other server etc) 2. A call back which fires after the connections
//succeeded or failed
//            mondodb protocol/URL            /Database    client here is the mongodbCLIENT object returned from the database call
MongoClient.connect('mongodb://localhost:27017/TodoApp', (err, client) =>{
    if(err) {
        return console.log('Unable to connect to database!');
    }
    console.log('Successfully connected to database!');

    //from the cient create a databsse object
    db = client.db('TodoApp')
    // db.collection('Todos').insertOne({
    //     text: 'Something to do',
    //     completed: false
    // },(err, result) =>{
    //     if(err) {
    //         return console.log('Unable to insert data',err)
    //     }
    //     else{
    //         console.log(JSON.stringify(result.ops,undefined,2));
    //     }
    // })
//
//It is not necessary to define collection in the MongoDB before hand, we can do it while making an insert
//insertOnce({}), it inserts one document
//     db.collection('Users').insertOne({
//         name : 'Ashish',
//         age : 29,
//         location: 'India'
//     }, (err,result) =>{
//         if (err){
//             return console.log('Error insertig document in the Users collection!',err)
//         }
//         console.log('Document insert complete!')
//         //result.ops returns the array of the documents which were just inserted
//         // console.log(JSON.stringify(result.ops, undefined, 2));
//         //to get the timestamp from the id field(timestamp will only be available on id object generated by MongoDB itself and 
//         //not in the id generated by us manually)
//             console.log(JSON.stringify(result.ops[0]._id.getTimestamp(), undefined, 2));
//     })

//     //close client and not the DB object(changes in v3 onwards of mongoDB)
    client.close();

})

//object id(12 bytes) is made up of following
//1-4 bytes - Timestamp
//5-7 bytes - Machine Identifier
//8-9 bytes - Process ID
//10-12 - Incremental counter